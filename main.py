import streamlit as st
from deta import Deta
import time

st.set_page_config(
    page_title='–ú–∏—Ä–æ–≤–æ–µ –≥–æ—Å–ø–æ–¥—Å—Ç–≤–æ',
    page_icon='ü•≠',
    layout='wide',
    initial_sidebar_state='collapsed',  # expanded/collapsed
    menu_items={
        'Get Help': 'https://www.youtube.com/watch?v=dQw4w9WgXcQ',
        'Report a bug': 'https://www.youtube.com/watch?v=dQw4w9WgXcQ',
        'About': '# –ê–≤—Ç–æ—Ä MangoVirus'
    })


class Country:
    def __init__(self, name, cities):
        self.name = name
        self.cities = cities


# GAME SETTINGS

basic_development = [60, 50, 50, 40]
basic_ecology = [72, 54, 54, 36]
up_multiplier = 10
debaf_multiplier = 20

sanctions_from_you_cost = 50
sanctions_for_you_cost = 100

improving_city_cost = 200
building_shield_cost = 350
building_rocket_cost = 500

all_countries = [
    Country('–ö–∏—Ç–∞–π', ['–ü–µ–∫–∏–Ω', '–®–∞–Ω—Ö–∞–π', '–ì—É–∞–Ω—á–∂–æ—É', '–ì–æ–Ω–∫–æ–Ω–≥']),
    Country('–Ø–ø–æ–Ω–∏—è', ['–ô–æ–∫–æ–≥–∞–º–∞', '–¢–æ–∫–∏–æ', '–ö–∏–æ—Ç–æ', '–û—Å–∞–∫–∞']),
    Country('–°–µ–≤–µ—Ä–Ω–∞—è –ö–æ—Ä–µ—è', ['–ü—Ö–µ–Ω—å—è–Ω', '–†–∞—Å–æ–Ω', '–•—É—Å–∞–Ω', '–í–æ–Ω—Å–∞–Ω']),
    Country('–ü–∞–∫–∏—Å—Ç–∞–Ω', ['–ö–∞—Ä–∞—á–∏', '–õ–∞—Ö–æ—Ä', '–ú—É–ª—Ç–∞–Ω', '–ö–≤–µ—Ç—Ç–∞']),
    Country('–ê—Ñ–≥–∞–Ω–∏—Å—Ç–∞–Ω', ['–ö–∞–±—É–ª', '–ì–µ—Ä–∞—Ç', '–ö–∞–Ω–¥–∞–≥–∞—Ä', '–ö—É–Ω–¥—É–∑']),
    Country('–°–∏—Ä–∏—è', ['–ê–ª–ª–µ–ø–æ', '–î–∞–º–∞—Å–∫', '–•–∞–º–∞', '–ê—Ñ—Ä–∏–Ω']),
]

# UNIQUE PARAMETERS

current_country_name_eng = 'Kitay'
current_country = all_countries[0]  # –ö–∏—Ç–∞–π
enemies = [x for x in all_countries if x != current_country]  # –°—Ç—Ä–∞–Ω—ã-–æ–ø–ø–æ–Ω–µ–Ω—Ç—ã —Å –≥–æ—Ä–æ–¥–∞–º–∏
enemies_names = [x.name for x in enemies]  # –°—Ç—Ä–∞–Ω—ã-–æ–ø–ø–æ–Ω–µ–Ω—Ç—ã

#

deta = Deta(st.secrets['deta_key'])
Global = deta.Base('Global')
db = deta.Base(current_country_name_eng)
Attak_Kitay = deta.Base('Attak_' + current_country_name_eng)
Graph = deta.Base('Photo_Url')
request = deta.Base('request')
request_money = deta.Base('request_money')
city = Global.get(current_country_name_eng)

money = city['money'] - ((city['sunks_of_you'] * sanctions_from_you_cost) +
                         (city['sunks_for_you'] * sanctions_for_you_cost))

st.sidebar.image('https://cdn.discordapp.com/attachments/890188503047077928/1070451124869533758/066443762463369c.png',
                 width=64)
menu = st.sidebar.selectbox('–ú–µ–Ω—é',
                            ('–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', '–£–ª—É—á—à–µ–Ω–∏—è', '–†–∞–∫–µ—Ç–∞', '–ü–æ—Å–µ—â–µ–Ω–∏—è', '–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω–∞—è –ø–æ–º–æ—â—å', '–ê–≤—Ç–æ—Ä—ã'))

if menu == '–ê–≤—Ç–æ—Ä—ã':
    '''# –ù–∞–¥ –¥–∞–Ω–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º —Ä–∞–±–æ—Ç–∞–ª–∏'''
    st.subheader('MangoVirus')
    '''–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∞–π—Ç–∞, —Å–æ–∑–¥–∞—Ç–µ–ª—å DataBase.'''
    st.subheader('–¢—É—Ä–±–∞')
    '''–ü—Ä–æ–µ–∫—Ç–Ω—ã–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å, –¥–∏–∑–∞–π–Ω–µ—Ä.'''
    st.subheader(
        '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞—Å –∏ –≤ –±—É–¥—É—â–µ–º –≤–∏–¥–µ—Ç—å –±–æ–ª–µ–µ –º–∞—à—Ç–∞–±–Ω—ã–µ –Ω–æ–≤–æ–≤–µ–¥–µ–Ω–∏—è –≤—ã '
        '–º–æ–∂–µ—Ç–µ —Å–∫–∏–Ω—É—Ç—å –Ω–∞–º –ø–∞—Ä—É —Ç—É–≥—Ä–∏–∫–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ 8(977)382-41-17')

if menu == '–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω–∞—è –ø–æ–º–æ—â—å':
    st.write('–î–µ–Ω—å–≥–∏:', money)
    visit_money = st.selectbox('–ö–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏?', enemies_names)
    how_money = st.number_input('–°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞?', 0)
    if st.button('–ü–µ—Ä–µ–≤–µ—Å—Ç–∏'):
        request_money.put({'who': current_country.name, 'come': visit_money, 'price': how_money})
        st.success('–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.(–î–µ–Ω—å–≥–∏ –ø—Ä–∏–¥—É—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç)')

if menu == '–ü–æ—Å–µ—â–µ–Ω–∏—è':
    visit = st.selectbox('–ö–∞–∫—É—é —Å—Ç–∞—Ä–∞–Ω—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å?', enemies_names)
    if st.button('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å'):
        request.put({'who': current_country.name, 'come': visit})
        st.success('–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')

if menu == '–†–∞–∫–µ—Ç–∞':
    final_roket = -1
    st.write('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö —Ä–∞–∫–µ—Ç:', city['roket'])

    selected_countries = st.multiselect('–ö–∞–∫–∏–µ —Å—Ç—Ä–∞–Ω—ã –∞—Ç–∞–∫—É–µ–º?', enemies_names)
    cities_under_attack = [Country(country_name, []) for country_name in enemies_names]

    for country in selected_countries:
        for i in range(0, len(enemies)):
            if country == enemies[i].name:
                cities_under_attack[i].cities = st.multiselect('–ö–∞–∫–∏–µ –≥–æ—Ä–æ–¥–∞ –∞—Ç–∞–∫—É–µ–º –≤ —Å—Ç—Ä–∞–Ω–µ ' + country + '?',
                                                               enemies[i].cities)
        final_roket = city['roket'] - (sum(len(country_cities.cities) for country_cities in cities_under_attack))
        st.write('–£ –≤–∞—Å –æ—Å—Ç–∞–Ω–µ—Ç—å—Å—è —Ä–∞–∫–µ—Ç:', final_roket)

    if st.button('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'):
        if final_roket >= 0:
            Attak_Kitay.put({enemies_names[i]: str(cities_under_attack[i].cities) for i in range(0, len(enemies))})
            db_content = Attak_Kitay.fetch().items
            st.write(db_content)
            with st.spinner('Wait for it...'):
                time.sleep(1)
            st.success('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!')
        else:
            st.error('–í—ã –≤—ã–ø—É—Å—Ç–∏–ª–∏ –±–æ–ª—å—à–µ —Ä–∞–∫–µ—Ç —á–µ–º —É –≤–∞—Å –µ—Å—Ç—å...')

if menu == '–£–ª—É—á—à–µ–Ω–∏—è':
    masiv_up = [0] * len(current_country.cities)
    masiv_shit = [' '] * len(current_country.cities)

    st.write('–î–µ–Ω—å–≥–∏:', money)

    st.write('–ö–∞–∫–∏–µ –≥–æ—Ä–æ–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å?')
    for i in range(0, len(current_country.cities)):
        up = st.checkbox(current_country.cities[i])
        if up:
            masiv_up[i] += 1
            money -= improving_city_cost

    st.write('–ù–∞ –∫–∞–∫–∏–µ –≥–æ—Ä–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–∏–º —â–∏—Ç—ã?')
    for i in range(0, len(current_country.cities)):
        shit = st.checkbox(current_country.cities[i] + ' ')
        if shit:
            masiv_shit[i] += 'üõ°Ô∏è'
            money -= building_shield_cost

    number = st.number_input('–°–∫–æ–ª—å–∫–æ —Ä–∞–∫–µ—Ç –¥–µ–ª–∞–µ–º?', 0)
    st.write('–í—ã –ø–æ–ª—É—á–∏—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∫–µ—Ç', number)
    money -= building_rocket_cost * number

    sunks_for_who = st.multiselect('–ù–∞ –∫–∞–∫–∏–µ —Å—Ç—Ä–∞–Ω—ã –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–ª–æ–∂–∏—Ç—å —Å–∞–Ω–∫—Ü–∏–∏?', enemies_names)
    money -= sanctions_from_you_cost * len(sunks_for_who)

    st.write('–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:', money)

    for i in range(0, len(current_country.cities)):
        current_up = masiv_up[i] * up_multiplier
        previous_up = city['up' + str(i + 1)] * up_multiplier + current_up
        previous_debaf = city['debaf' + str(i + 1)] * debaf_multiplier
        st.metric('üè†' + city['shit' + str(i + 1)] + masiv_shit[i] + current_country.cities[i],
                  '‚öôÔ∏è' + str(basic_development[i] + previous_up) + '% ' +
                  'üå≥' + str(basic_ecology[i] + previous_up - previous_debaf) + '%',
                  current_up)

    if st.button('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'):
        if money >= 0:
            db.put({'money': money, 'roket': number, 'shit': str(masiv_shit),
                    'up': str(masiv_up), 'sunks_for_who': str(sunks_for_who)})
            db_content = db.fetch().items
            st.write(db_content)
            with st.spinner('Wait for it...'):
                time.sleep(1)
            st.success('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!')
        else:
            st.error('–í—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥ —á–µ–º —É –≤–∞—Å –µ—Å—Ç—å...')

if menu == '–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞':
    st.title('–í—ã –∏–≥—Ä–∞–µ—Ç–µ –∑–∞ ' + current_country.name)

    st.write('–î–µ–Ω—å–≥–∏:', money)
    st.write('–†–∞–∫–µ—Ç—ã:', city['roket'])
    st.write('–°–∞–Ω–∫—Ü–∏–∏ –Ω–∞–ª–æ–∂–µ–Ω—ã–µ –≤–∞–º–∏:', city['sunks_of_you'])
    st.write('–°–∞–Ω–∫—Ü–∏–∏ –Ω–∞–ª–æ–∂–µ–Ω—ã–µ –Ω–∞ –≤–∞—Å:', city['sunks_for_you'])

    lst = st.columns(len(current_country.cities))
    for i in range(0, len(current_country.cities)):
        previous_up = city['up' + str(i + 1)] * up_multiplier
        previous_debaf = city['debaf' + str(i + 1)] * debaf_multiplier
        lst[i].metric('üè†' + city['shit' + str(i + 1)] + current_country.cities[i],
                  '‚öôÔ∏è' + str(basic_development[i] + previous_up) + '% ' +
                  'üå≥' + str(basic_ecology[i] + previous_up - previous_debaf) + '%')
